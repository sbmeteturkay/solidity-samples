{
	"id": "e7e6d61285e45291debd1acbb26b27c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc20/contracts/StandardToken.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport \"./BasicToken.sol\";\r\nimport \"./ERC20.sol\";\r\n\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amount of tokens to be transferred\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   *\r\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifying the amount of tokens still available for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  /**\r\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\r\n   *\r\n   * approve should be called when allowed[_spender] == 0. To increment\r\n   * allowed value is better to use this function to avoid 2 calls (and wait until\r\n   * the first transaction is mined)\r\n   * From MonolithDAO Token.sol\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _addedValue The amount of tokens to increase the allowance by.\r\n   */\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\r\n   *\r\n   * approve should be called when allowed[_spender] == 0. To decrement\r\n   * allowed value is better to use this function to avoid 2 calls (and wait until\r\n   * the first transaction is mined)\r\n   * From MonolithDAO Token.sol\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\r\n   */\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n"
			},
			"erc20/contracts/ERC20.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\nimport \"./ERC20Basic.sol\";\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n"
			},
			"erc20/contracts/BasicToken.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\nimport \"./ERC20Basic.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  uint256 totalSupply_;\r\n\r\n  /**\r\n  * @dev total number of tokens in existence\r\n  */\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply_;\r\n  }\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n"
			},
			"erc20/contracts/ERC20Basic.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n"
			},
			"erc20/contracts/SafeMath.sol": {
				"content": "pragma solidity ^0.4.18;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"erc20/contracts/BasicToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint256 representing the amount owned by the passed address.\r"
							},
							"totalSupply()": {
								"details": "total number of tokens in existence\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							}
						},
						"title": "Basic token\r"
					},
					"evm": {
						"assembly": "    /* \"erc20/contracts/BasicToken.sol\":182:1340  contract BasicToken is ERC20Basic {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"erc20/contracts/BasicToken.sol\":182:1340  contract BasicToken is ERC20Basic {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20/contracts/BasicToken.sol\":182:1340  contract BasicToken is ERC20Basic {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x18160ddd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n      pop\n      tag_9\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n    tag_7:\n        /* \"erc20/contracts/BasicToken.sol\":427:434  uint256 */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":450:462  totalSupply_ */\n      sload(0x1)\n        /* \"erc20/contracts/BasicToken.sol\":443:462  return totalSupply_ */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n    tag_10:\n        /* \"erc20/contracts/BasicToken.sol\":1282:1297  uint256 balance */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":1313:1321  balances */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":1313:1329  balances[_owner] */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":1322:1328  _owner */\n      dup4\n        /* \"erc20/contracts/BasicToken.sol\":1313:1329  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":1306:1329  return balances[_owner] */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_13:\n        /* \"erc20/contracts/BasicToken.sol\":692:696  bool */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":728:729  0 */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":713:730  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/BasicToken.sol\":713:716  _to */\n      dup4\n        /* \"erc20/contracts/BasicToken.sol\":713:730  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc20/contracts/BasicToken.sol\":705:731  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_17\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_17:\n        /* \"erc20/contracts/BasicToken.sol\":756:764  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":756:776  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":765:775  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":756:776  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":746:752  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":746:776  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"erc20/contracts/BasicToken.sol\":738:777  require(_value <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n        /* \"erc20/contracts/BasicToken.sol\":873:905  balances[msg.sender].sub(_value) */\n      tag_19\n        /* \"erc20/contracts/BasicToken.sol\":898:904  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":873:881  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":873:893  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":882:892  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":873:893  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":873:897  balances[msg.sender].sub */\n      tag_20\n      swap1\n        /* \"erc20/contracts/BasicToken.sol\":873:905  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"erc20/contracts/BasicToken.sol\":850:858  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":850:870  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":859:869  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":850:870  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/BasicToken.sol\":850:905  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":928:953  balances[_to].add(_value) */\n      tag_21\n        /* \"erc20/contracts/BasicToken.sol\":946:952  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":928:936  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":928:941  balances[_to] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":937:940  _to */\n      dup7\n        /* \"erc20/contracts/BasicToken.sol\":928:941  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":928:945  balances[_to].add */\n      tag_22\n      swap1\n        /* \"erc20/contracts/BasicToken.sol\":928:953  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_21:\n        /* \"erc20/contracts/BasicToken.sol\":912:920  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":912:925  balances[_to] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":921:924  _to */\n      dup6\n        /* \"erc20/contracts/BasicToken.sol\":912:925  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/BasicToken.sol\":912:953  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":981:984  _to */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/BasicToken.sol\":969:979  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"erc20/contracts/BasicToken.sol\":986:992  _value */\n      dup5\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/BasicToken.sol\":1007:1011  true */\n      0x1\n        /* \"erc20/contracts/BasicToken.sol\":1000:1011  return true */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/SafeMath.sol\":870:983  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_20:\n        /* \"erc20/contracts/SafeMath.sol\":928:935  uint256 */\n      0x0\n        /* \"erc20/contracts/SafeMath.sol\":956:957  a */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":951:952  b */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":951:957  b <= a */\n      gt\n      iszero\n        /* \"erc20/contracts/SafeMath.sol\":944:958  assert(b <= a) */\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"erc20/contracts/SafeMath.sol\":976:977  b */\n      dup2\n        /* \"erc20/contracts/SafeMath.sol\":972:973  a */\n      dup4\n        /* \"erc20/contracts/SafeMath.sol\":972:977  a - b */\n      sub\n        /* \"erc20/contracts/SafeMath.sol\":965:977  return a - b */\n      swap1\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":870:983  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/SafeMath.sol\":1050:1183  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_22:\n        /* \"erc20/contracts/SafeMath.sol\":1108:1115  uint256 */\n      0x0\n        /* \"erc20/contracts/SafeMath.sol\":1124:1133  uint256 c */\n      dup1\n        /* \"erc20/contracts/SafeMath.sol\":1140:1141  b */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":1136:1137  a */\n      dup5\n        /* \"erc20/contracts/SafeMath.sol\":1136:1141  a + b */\n      add\n        /* \"erc20/contracts/SafeMath.sol\":1124:1141  uint256 c = a + b */\n      swap1\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":1160:1161  a */\n      dup4\n        /* \"erc20/contracts/SafeMath.sol\":1155:1156  c */\n      dup2\n        /* \"erc20/contracts/SafeMath.sol\":1155:1161  c >= a */\n      lt\n      iszero\n        /* \"erc20/contracts/SafeMath.sol\":1148:1162  assert(c >= a) */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n        /* \"erc20/contracts/SafeMath.sol\":1176:1177  c */\n      dup1\n        /* \"erc20/contracts/SafeMath.sol\":1169:1177  return c */\n      swap2\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":1050:1183  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820b7aea0648da2589c6cbe5ece03f61db4ba5d862212a6e824e613c75c7ad1f6150029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610417806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156101d257600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561021f57600080fd5b610270826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610303826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103cd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c257fe5b818303905092915050565b60008082840190508381101515156103e157fe5b80915050929150505600a165627a7a72305820b7aea0648da2589c6cbe5ece03f61db4ba5d862212a6e824e613c75c7ad1f6150029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x270 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x303 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x3C2 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb7 0xae LOG0 PUSH5 0x8DA2589C6C 0xbe 0x5e 0xce SUB 0xf6 SAR 0xb4 0xba 0x5d DUP7 0x22 SLT 0xa6 0xe8 0x24 0xe6 SGT 0xc7 0x5c PUSH27 0xD1F615002900000000000000000000000000000000000000000000 ",
							"sourceMap": "182:1158:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:1158:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156101d257600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561021f57600080fd5b610270826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610303826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103cd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c257fe5b818303905092915050565b60008082840190508381101515156103e157fe5b80915050929150505600a165627a7a72305820b7aea0648da2589c6cbe5ece03f61db4ba5d862212a6e824e613c75c7ad1f6150029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x270 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x303 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3CD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x3C2 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x3E1 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb7 0xae LOG0 PUSH5 0x8DA2589C6C 0xbe 0x5e 0xce SUB 0xf6 SAR 0xb4 0xba 0x5d DUP7 0x22 SLT 0xa6 0xe8 0x24 0xe6 SGT 0xc7 0x5c PUSH27 0xD1F615002900000000000000000000000000000000000000000000 ",
							"sourceMap": "182:1158:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:85:0;;;;;;;;;;;;;;;;;;;;;;;1226:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1226:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:388;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:388:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:85;427:7;450:12;;443:19;;383:85;:::o;1226:109::-;1282:15;1313:8;:16;1322:6;1313:16;;;;;;;;;;;;;;;;1306:23;;1226:109;;;:::o;629:388::-;692:4;728:1;713:17;;:3;:17;;;;705:26;;;;;;;;756:8;:20;765:10;756:20;;;;;;;;;;;;;;;;746:6;:30;;738:39;;;;;;;;873:32;898:6;873:8;:20;882:10;873:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;850:8;:20;859:10;850:20;;;;;;;;;;;;;;;:55;;;;928:25;946:6;928:8;:13;937:3;928:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;912:8;:13;921:3;912:13;;;;;;;;;;;;;;;:41;;;;981:3;960:33;;969:10;960:33;;;986:6;960:33;;;;;;;;;;;;;;;;;;1007:4;1000:11;;629:388;;;;:::o;870:113:3:-;928:7;956:1;951;:6;;944:14;;;;;;976:1;972;:5;965:12;;870:113;;;;:::o;1050:133::-;1108:7;1124:9;1140:1;1136;:5;1124:17;;1160:1;1155;:6;;1148:14;;;;;;1176:1;1169:8;;1050:133;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209400",
								"executionCost": "251",
								"totalCost": "209651"
							},
							"external": {
								"balanceOf(address)": "581",
								"totalSupply()": "402",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "MSTORE"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "POP"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "DUP1"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "CODECOPY"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 182,
									"end": 1340,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b7aea0648da2589c6cbe5ece03f61db4ba5d862212a6e824e613c75c7ad1f6150029",
									".code": [
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "MSTORE"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "LT"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "SWAP1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "DIV"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "AND"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "EQ"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "EQ"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "EQ"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "JUMPDEST"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 1340,
											"name": "REVERT"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "RETURN"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SUB"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP3"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MLOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP3"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MSTORE"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MLOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SUB"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "RETURN"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SUB"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SUB"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "RETURN"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 427,
											"end": 434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 450,
											"end": 462,
											"name": "SLOAD"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP4"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "MSTORE"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "MSTORE"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "KECCAK256"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SLOAD"
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 729,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 716,
											"name": "DUP4"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "EQ"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "JUMPI"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "REVERT"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 756,
											"end": 764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "CALLER"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "ADD"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "ADD"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "KECCAK256"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3"
										},
										{
											"begin": 746,
											"end": 776,
											"name": "GT"
										},
										{
											"begin": 746,
											"end": 776,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "REVERT"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 882,
											"end": 892,
											"name": "CALLER"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "KECCAK256"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SLOAD"
										},
										{
											"begin": 873,
											"end": 897,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "JUMPDEST"
										},
										{
											"begin": 850,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP1"
										},
										{
											"begin": 859,
											"end": 869,
											"name": "CALLER"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "KECCAK256"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "SSTORE"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "POP"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP3"
										},
										{
											"begin": 928,
											"end": 936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 940,
											"name": "DUP7"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "ADD"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "ADD"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "KECCAK256"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SLOAD"
										},
										{
											"begin": 928,
											"end": 945,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "SWAP2"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "JUMPDEST"
										},
										{
											"begin": 912,
											"end": 920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 921,
											"end": 924,
											"name": "DUP6"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "SWAP1"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "KECCAK256"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SSTORE"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "AND"
										},
										{
											"begin": 969,
											"end": 979,
											"name": "CALLER"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "AND"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP5"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MLOAD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP3"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MSTORE"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "ADD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "POP"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "POP"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MLOAD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SUB"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "LOG3"
										},
										{
											"begin": 1007,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 956,
											"end": 957,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "GT"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "JUMPI"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "INVALID"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 976,
											"end": 977,
											"name": "DUP2"
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP4"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 977,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 977,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "SWAP3"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1133,
											"name": "DUP1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP3"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP5"
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "ADD"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "SWAP1"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "DUP4"
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "LT"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "JUMPI"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "INVALID"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "JUMPDEST"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "DUP1"
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "SWAP2"
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "SWAP3"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"_owner\":\"The address to query the the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"totalSupply()\":{\"details\":\"total number of tokens in existence\\r\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\\r\",\"params\":{\"_to\":\"The address to transfer to.\\r\",\"_value\":\"The amount to be transferred.\\r\"}}},\"title\":\"Basic token\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"erc20/contracts/BasicToken.sol\":\"BasicToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc20/contracts/BasicToken.sol\":{\"keccak256\":\"0x4048384d4f92db32e4a767ff232bd80b585bcb6f8835ea5413de52438947c0f3\",\"urls\":[\"bzzr://38065e30a9b41828cc3004a736eed28da464784bd285a29f8f0bbbd877922d33\"]},\"erc20/contracts/ERC20Basic.sol\":{\"keccak256\":\"0x1f3c5cfe3678d25646cb1f1ce20b414e52a7dcde8abe46873b5740d32e08d655\",\"urls\":[\"bzzr://45add859ca62e4833cdac29e7a71f894dc82bbfeebc65acf4b67766667d54539\"]},\"erc20/contracts/SafeMath.sol\":{\"keccak256\":\"0x8fdf7e0a3939484bb124e5c37bdf801d7723c23dd0e189e3b0298593470902e4\",\"urls\":[\"bzzr://179b645f42dbb8d1208fd8cd17fcce20fa72fb4b02bbfaaa65cc7a5d0180559f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"erc20/contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"erc20/contracts/ERC20Basic.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"erc20/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"erc20/contracts/SafeMath.sol\":124:1186  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20/contracts/SafeMath.sol\":124:1186  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582079afab9dd58aa01e7046d54f09e6b7e4a311c8d1875097e550d2aa69a2a2f0a30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582079afab9dd58aa01e7046d54f09e6b7e4a311c8d1875097e550d2aa69a2a2f0a30029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH26 0xAFAB9DD58AA01E7046D54F09E6B7E4A311C8D1875097E550D2AA PUSH10 0xA2A2F0A3002900000000 ",
							"sourceMap": "124:1062:3:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582079afab9dd58aa01e7046d54f09e6b7e4a311c8d1875097e550d2aa69a2a2f0a30029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH26 0xAFAB9DD58AA01E7046D54F09E6B7E4A311C8D1875097E550D2AA PUSH10 0xA2A2F0A3002900000000 ",
							"sourceMap": "124:1062:3:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 1186,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 1186,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582079afab9dd58aa01e7046d54f09e6b7e4a311c8d1875097e550d2aa69a2a2f0a30029",
									".code": [
										{
											"begin": 124,
											"end": 1186,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "ADDRESS"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "EQ"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 1186,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"erc20/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc20/contracts/SafeMath.sol\":{\"keccak256\":\"0x8fdf7e0a3939484bb124e5c37bdf801d7723c23dd0e189e3b0298593470902e4\",\"urls\":[\"bzzr://179b645f42dbb8d1208fd8cd17fcce20fa72fb4b02bbfaaa65cc7a5d0180559f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"erc20/contracts/StandardToken.sol": {
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint256 specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r    * Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint256 representing the amount owned by the passed address.\r"
							},
							"decreaseApproval(address,uint256)": {
								"details": "Decrease the amount of tokens that an owner allowed to a spender.\r    * approve should be called when allowed[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_subtractedValue": "The amount of tokens to decrease the allowance by.\r"
								}
							},
							"increaseApproval(address,uint256)": {
								"details": "Increase the amount of tokens that an owner allowed to a spender.\r    * approve should be called when allowed[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
								"params": {
									"_addedValue": "The amount of tokens to increase the allowance by.\r",
									"_spender": "The address which will spend the funds.\r"
								}
							},
							"totalSupply()": {
								"details": "total number of tokens in existence\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint256 the amount of tokens to be transferred\r"
								}
							}
						},
						"title": "Standard ERC20 token\r "
					},
					"evm": {
						"assembly": "    /* \"erc20/contracts/StandardToken.sol\":357:4102  contract StandardToken is ERC20, BasicToken {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"erc20/contracts/StandardToken.sol\":357:4102  contract StandardToken is ERC20, BasicToken {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20/contracts/StandardToken.sol\":357:4102  contract StandardToken is ERC20, BasicToken {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x95ea7b3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x66188463\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd73dd623\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"erc20/contracts/StandardToken.sol\":1844:2031  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"erc20/contracts/StandardToken.sol\":1844:2031  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/StandardToken.sol\":760:1209  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"erc20/contracts/StandardToken.sol\":760:1209  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/StandardToken.sol\":3690:4097  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"erc20/contracts/StandardToken.sol\":3690:4097  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r... */\n      pop\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_26\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/StandardToken.sol\":2955:3216  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"erc20/contracts/StandardToken.sol\":2955:3216  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/StandardToken.sol\":2358:2486  function allowance(address _owner, address _spender) public view returns (uint256) {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"erc20/contracts/StandardToken.sol\":2358:2486  function allowance(address _owner, address _spender) public view returns (uint256) {\r... */\n      pop\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20/contracts/StandardToken.sol\":1844:2031  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_12:\n        /* \"erc20/contracts/StandardToken.sol\":1911:1915  bool */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1956:1962  _value */\n      dup2\n        /* \"erc20/contracts/StandardToken.sol\":1924:1931  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":1924:1943  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1932:1942  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":1924:1943  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1924:1953  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1944:1952  _spender */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":1924:1953  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1924:1962  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":1990:1998  _spender */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":1969:2007  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/StandardToken.sol\":1978:1988  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":1969:2007  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"erc20/contracts/StandardToken.sol\":2000:2006  _value */\n      dup5\n        /* \"erc20/contracts/StandardToken.sol\":1969:2007  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/StandardToken.sol\":2021:2025  true */\n      0x1\n        /* \"erc20/contracts/StandardToken.sol\":2014:2025  return true */\n      swap1\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":1844:2031  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n    tag_15:\n        /* \"erc20/contracts/BasicToken.sol\":427:434  uint256 */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":450:462  totalSupply_ */\n      sload(0x1)\n        /* \"erc20/contracts/BasicToken.sol\":443:462  return totalSupply_ */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":383:468  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"erc20/contracts/StandardToken.sol\":760:1209  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_18:\n        /* \"erc20/contracts/StandardToken.sol\":842:846  bool */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":878:879  0 */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":863:880  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/StandardToken.sol\":863:866  _to */\n      dup4\n        /* \"erc20/contracts/StandardToken.sol\":863:880  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc20/contracts/StandardToken.sol\":855:881  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"erc20/contracts/StandardToken.sol\":906:914  balances */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":906:921  balances[_from] */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":915:920  _from */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":906:921  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":896:902  _value */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":896:921  _value <= balances[_from] */\n      gt\n      iszero\n        /* \"erc20/contracts/StandardToken.sol\":888:922  require(_value <= balances[_from]) */\n      iszero\n      iszero\n      tag_38\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_38:\n        /* \"erc20/contracts/StandardToken.sol\":947:954  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":947:961  allowed[_from] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":955:960  _from */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":947:961  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":947:973  allowed[_from][msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":962:972  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":947:973  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":937:943  _value */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":937:973  _value <= allowed[_from][msg.sender] */\n      gt\n      iszero\n        /* \"erc20/contracts/StandardToken.sol\":929:974  require(_value <= allowed[_from][msg.sender]) */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_39:\n        /* \"erc20/contracts/StandardToken.sol\":1001:1028  balances[_from].sub(_value) */\n      tag_40\n        /* \"erc20/contracts/StandardToken.sol\":1021:1027  _value */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":1001:1009  balances */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1001:1016  balances[_from] */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":1010:1015  _from */\n      dup8\n        /* \"erc20/contracts/StandardToken.sol\":1001:1016  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":1001:1020  balances[_from].sub */\n      tag_41\n      swap1\n        /* \"erc20/contracts/StandardToken.sol\":1001:1028  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"erc20/contracts/StandardToken.sol\":983:991  balances */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":983:998  balances[_from] */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":992:997  _from */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":983:998  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":983:1028  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":1051:1076  balances[_to].add(_value) */\n      tag_42\n        /* \"erc20/contracts/StandardToken.sol\":1069:1075  _value */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":1051:1059  balances */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1051:1064  balances[_to] */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":1060:1063  _to */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":1051:1064  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":1051:1068  balances[_to].add */\n      tag_43\n      swap1\n        /* \"erc20/contracts/StandardToken.sol\":1051:1076  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_42:\n        /* \"erc20/contracts/StandardToken.sol\":1035:1043  balances */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1035:1048  balances[_to] */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":1044:1047  _to */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":1035:1048  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1035:1076  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":1112:1150  allowed[_from][msg.sender].sub(_value) */\n      tag_44\n        /* \"erc20/contracts/StandardToken.sol\":1143:1149  _value */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":1112:1119  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":1112:1126  allowed[_from] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1120:1125  _from */\n      dup8\n        /* \"erc20/contracts/StandardToken.sol\":1112:1126  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1112:1138  allowed[_from][msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1127:1137  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":1112:1138  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":1112:1142  allowed[_from][msg.sender].sub */\n      tag_41\n      swap1\n        /* \"erc20/contracts/StandardToken.sol\":1112:1150  allowed[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"erc20/contracts/StandardToken.sol\":1083:1090  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":1083:1097  allowed[_from] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1091:1096  _from */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":1083:1097  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1083:1109  allowed[_from][msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":1098:1108  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":1083:1109  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":1083:1150  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":1173:1176  _to */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":1157:1185  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/StandardToken.sol\":1166:1171  _from */\n      dup5\n        /* \"erc20/contracts/StandardToken.sol\":1157:1185  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"erc20/contracts/StandardToken.sol\":1178:1184  _value */\n      dup5\n        /* \"erc20/contracts/StandardToken.sol\":1157:1185  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/StandardToken.sol\":1199:1203  true */\n      0x1\n        /* \"erc20/contracts/StandardToken.sol\":1192:1203  return true */\n      swap1\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":760:1209  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/StandardToken.sol\":3690:4097  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r... */\n    tag_21:\n        /* \"erc20/contracts/StandardToken.sol\":3773:3777  bool */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3786:3799  uint oldValue */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":3802:3809  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3802:3821  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3810:3820  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3802:3821  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3802:3831  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3822:3830  _spender */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":3802:3831  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":3786:3831  uint oldValue = allowed[msg.sender][_spender] */\n      swap1\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":3861:3869  oldValue */\n      dup1\n        /* \"erc20/contracts/StandardToken.sol\":3842:3858  _subtractedValue */\n      dup4\n        /* \"erc20/contracts/StandardToken.sol\":3842:3869  _subtractedValue > oldValue */\n      gt\n        /* \"erc20/contracts/StandardToken.sol\":3838:4006  if (_subtractedValue > oldValue) {\r... */\n      iszero\n      tag_46\n      jumpi\n        /* \"erc20/contracts/StandardToken.sol\":3912:3913  0 */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3880:3887  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3880:3899  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3888:3898  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3880:3899  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3880:3909  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3900:3908  _spender */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":3880:3909  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3880:3913  allowed[msg.sender][_spender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":3838:4006  if (_subtractedValue > oldValue) {\r... */\n      jump(tag_47)\n    tag_46:\n        /* \"erc20/contracts/StandardToken.sol\":3968:3998  oldValue.sub(_subtractedValue) */\n      tag_48\n        /* \"erc20/contracts/StandardToken.sol\":3981:3997  _subtractedValue */\n      dup4\n        /* \"erc20/contracts/StandardToken.sol\":3968:3976  oldValue */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":3968:3980  oldValue.sub */\n      tag_41\n      swap1\n        /* \"erc20/contracts/StandardToken.sol\":3968:3998  oldValue.sub(_subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_48:\n        /* \"erc20/contracts/StandardToken.sol\":3936:3943  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3936:3955  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3944:3954  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3936:3955  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3936:3965  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3956:3964  _spender */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":3936:3965  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3936:3998  allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":3838:4006  if (_subtractedValue > oldValue) {\r... */\n    tag_47:\n        /* \"erc20/contracts/StandardToken.sol\":4033:4041  _spender */\n      dup4\n        /* \"erc20/contracts/StandardToken.sol\":4012:4073  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/StandardToken.sol\":4021:4031  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":4012:4073  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"erc20/contracts/StandardToken.sol\":4043:4050  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":4043:4062  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":4051:4061  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":4043:4062  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":4043:4072  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":4063:4071  _spender */\n      dup9\n        /* \"erc20/contracts/StandardToken.sol\":4043:4072  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":4012:4073  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/StandardToken.sol\":4087:4091  true */\n      0x1\n        /* \"erc20/contracts/StandardToken.sol\":4080:4091  return true */\n      swap2\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":3690:4097  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n    tag_24:\n        /* \"erc20/contracts/BasicToken.sol\":1282:1297  uint256 balance */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":1313:1321  balances */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":1313:1329  balances[_owner] */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":1322:1328  _owner */\n      dup4\n        /* \"erc20/contracts/BasicToken.sol\":1313:1329  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":1306:1329  return balances[_owner] */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":1226:1335  function balanceOf(address _owner) public view returns (uint256 balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_27:\n        /* \"erc20/contracts/BasicToken.sol\":692:696  bool */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":728:729  0 */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":713:730  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/BasicToken.sol\":713:716  _to */\n      dup4\n        /* \"erc20/contracts/BasicToken.sol\":713:730  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"erc20/contracts/BasicToken.sol\":705:731  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_51\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_51:\n        /* \"erc20/contracts/BasicToken.sol\":756:764  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":756:776  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":765:775  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":756:776  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":746:752  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":746:776  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"erc20/contracts/BasicToken.sol\":738:777  require(_value <= balances[msg.sender]) */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_52:\n        /* \"erc20/contracts/BasicToken.sol\":873:905  balances[msg.sender].sub(_value) */\n      tag_53\n        /* \"erc20/contracts/BasicToken.sol\":898:904  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":873:881  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":873:893  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":882:892  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":873:893  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":873:897  balances[msg.sender].sub */\n      tag_41\n      swap1\n        /* \"erc20/contracts/BasicToken.sol\":873:905  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"erc20/contracts/BasicToken.sol\":850:858  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":850:870  balances[msg.sender] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":859:869  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":850:870  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/BasicToken.sol\":850:905  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":928:953  balances[_to].add(_value) */\n      tag_54\n        /* \"erc20/contracts/BasicToken.sol\":946:952  _value */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":928:936  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":928:941  balances[_to] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":937:940  _to */\n      dup7\n        /* \"erc20/contracts/BasicToken.sol\":928:941  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/BasicToken.sol\":928:945  balances[_to].add */\n      tag_43\n      swap1\n        /* \"erc20/contracts/BasicToken.sol\":928:953  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_54:\n        /* \"erc20/contracts/BasicToken.sol\":912:920  balances */\n      0x0\n        /* \"erc20/contracts/BasicToken.sol\":912:925  balances[_to] */\n      dup1\n        /* \"erc20/contracts/BasicToken.sol\":921:924  _to */\n      dup6\n        /* \"erc20/contracts/BasicToken.sol\":912:925  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/BasicToken.sol\":912:953  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":981:984  _to */\n      dup3\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/BasicToken.sol\":969:979  msg.sender */\n      caller\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"erc20/contracts/BasicToken.sol\":986:992  _value */\n      dup5\n        /* \"erc20/contracts/BasicToken.sol\":960:993  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/BasicToken.sol\":1007:1011  true */\n      0x1\n        /* \"erc20/contracts/BasicToken.sol\":1000:1011  return true */\n      swap1\n      pop\n        /* \"erc20/contracts/BasicToken.sol\":629:1017  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/StandardToken.sol\":2955:3216  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r... */\n    tag_30:\n        /* \"erc20/contracts/StandardToken.sol\":3033:3037  bool */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3078:3124  allowed[msg.sender][_spender].add(_addedValue) */\n      tag_56\n        /* \"erc20/contracts/StandardToken.sol\":3112:3123  _addedValue */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":3078:3085  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3078:3097  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3086:3096  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3078:3097  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3078:3107  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3098:3106  _spender */\n      dup7\n        /* \"erc20/contracts/StandardToken.sol\":3078:3107  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":3078:3111  allowed[msg.sender][_spender].add */\n      tag_43\n      swap1\n        /* \"erc20/contracts/StandardToken.sol\":3078:3124  allowed[msg.sender][_spender].add(_addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"erc20/contracts/StandardToken.sol\":3046:3053  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3046:3065  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3054:3064  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3046:3065  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3046:3075  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3066:3074  _spender */\n      dup6\n        /* \"erc20/contracts/StandardToken.sol\":3046:3075  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3046:3124  allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":3152:3160  _spender */\n      dup3\n        /* \"erc20/contracts/StandardToken.sol\":3131:3192  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc20/contracts/StandardToken.sol\":3140:3150  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3131:3192  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"erc20/contracts/StandardToken.sol\":3162:3169  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":3162:3181  allowed[msg.sender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3170:3180  msg.sender */\n      caller\n        /* \"erc20/contracts/StandardToken.sol\":3162:3181  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":3162:3191  allowed[msg.sender][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":3182:3190  _spender */\n      dup8\n        /* \"erc20/contracts/StandardToken.sol\":3162:3191  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":3131:3192  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20/contracts/StandardToken.sol\":3206:3210  true */\n      0x1\n        /* \"erc20/contracts/StandardToken.sol\":3199:3210  return true */\n      swap1\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":2955:3216  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/StandardToken.sol\":2358:2486  function allowance(address _owner, address _spender) public view returns (uint256) {\r... */\n    tag_33:\n        /* \"erc20/contracts/StandardToken.sol\":2432:2439  uint256 */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":2455:2462  allowed */\n      0x2\n        /* \"erc20/contracts/StandardToken.sol\":2455:2470  allowed[_owner] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":2463:2469  _owner */\n      dup5\n        /* \"erc20/contracts/StandardToken.sol\":2455:2470  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"erc20/contracts/StandardToken.sol\":2455:2480  allowed[_owner][_spender] */\n      0x0\n        /* \"erc20/contracts/StandardToken.sol\":2471:2479  _spender */\n      dup4\n        /* \"erc20/contracts/StandardToken.sol\":2455:2480  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"erc20/contracts/StandardToken.sol\":2448:2480  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"erc20/contracts/StandardToken.sol\":2358:2486  function allowance(address _owner, address _spender) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/SafeMath.sol\":870:983  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_41:\n        /* \"erc20/contracts/SafeMath.sol\":928:935  uint256 */\n      0x0\n        /* \"erc20/contracts/SafeMath.sol\":956:957  a */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":951:952  b */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":951:957  b <= a */\n      gt\n      iszero\n        /* \"erc20/contracts/SafeMath.sol\":944:958  assert(b <= a) */\n      iszero\n      iszero\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n        /* \"erc20/contracts/SafeMath.sol\":976:977  b */\n      dup2\n        /* \"erc20/contracts/SafeMath.sol\":972:973  a */\n      dup4\n        /* \"erc20/contracts/SafeMath.sol\":972:977  a - b */\n      sub\n        /* \"erc20/contracts/SafeMath.sol\":965:977  return a - b */\n      swap1\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":870:983  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc20/contracts/SafeMath.sol\":1050:1183  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_43:\n        /* \"erc20/contracts/SafeMath.sol\":1108:1115  uint256 */\n      0x0\n        /* \"erc20/contracts/SafeMath.sol\":1124:1133  uint256 c */\n      dup1\n        /* \"erc20/contracts/SafeMath.sol\":1140:1141  b */\n      dup3\n        /* \"erc20/contracts/SafeMath.sol\":1136:1137  a */\n      dup5\n        /* \"erc20/contracts/SafeMath.sol\":1136:1141  a + b */\n      add\n        /* \"erc20/contracts/SafeMath.sol\":1124:1141  uint256 c = a + b */\n      swap1\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":1160:1161  a */\n      dup4\n        /* \"erc20/contracts/SafeMath.sol\":1155:1156  c */\n      dup2\n        /* \"erc20/contracts/SafeMath.sol\":1155:1161  c >= a */\n      lt\n      iszero\n        /* \"erc20/contracts/SafeMath.sol\":1148:1162  assert(c >= a) */\n      iszero\n      iszero\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n        /* \"erc20/contracts/SafeMath.sol\":1176:1177  c */\n      dup1\n        /* \"erc20/contracts/SafeMath.sol\":1169:1177  return c */\n      swap2\n      pop\n        /* \"erc20/contracts/SafeMath.sol\":1050:1183  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205182a2fc85ef3863c5866c98efa46b9407d06f1f4e7672d151bc5a58670b98270029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611039806100206000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009357806318160ddd146100f857806323b872dd1461012357806366188463146101a857806370a082311461020d578063a9059cbb14610264578063d73dd623146102c9578063dd62ed3e1461032e575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a5565b604051808215151515815260200191505060405180910390f35b34801561010457600080fd5b5061010d610497565b6040518082815260200191505060405180910390f35b34801561012f57600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a1565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085b565b604051808215151515815260200191505060405180910390f35b34801561021957600080fd5b5061024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aec565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b34565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b50610314600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d53565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b5061038f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4f565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156104de57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561052b57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105b657600080fd5b610607826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069a826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061076b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561096c576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a00565b61097f8382610fd690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b7157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610bbe57600080fd5b610c0f826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca2826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610de482600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610fe457fe5b818303905092915050565b600080828401905083811015151561100357fe5b80915050929150505600a165627a7a723058205182a2fc85ef3863c5866c98efa46b9407d06f1f4e7672d151bc5a58670b98270029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1039 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x607 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69A DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x76B DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x97F DUP4 DUP3 PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0F DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCA2 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1003 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MLOAD DUP3 LOG2 0xfc DUP6 0xef CODESIZE PUSH4 0xC5866C98 0xef LOG4 PUSH12 0x9407D06F1F4E7672D151BC5A PC PUSH8 0xB98270029000000 ",
							"sourceMap": "357:3745:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:3745:4;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009357806318160ddd146100f857806323b872dd1461012357806366188463146101a857806370a082311461020d578063a9059cbb14610264578063d73dd623146102c9578063dd62ed3e1461032e575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a5565b604051808215151515815260200191505060405180910390f35b34801561010457600080fd5b5061010d610497565b6040518082815260200191505060405180910390f35b34801561012f57600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a1565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085b565b604051808215151515815260200191505060405180910390f35b34801561021957600080fd5b5061024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aec565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b34565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b50610314600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d53565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b5061038f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4f565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156104de57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561052b57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105b657600080fd5b610607826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069a826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061076b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561096c576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a00565b61097f8382610fd690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b7157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610bbe57600080fd5b610c0f826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca2826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610de482600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610fe457fe5b818303905092915050565b600080828401905083811015151561100357fe5b80915050929150505600a165627a7a723058205182a2fc85ef3863c5866c98efa46b9407d06f1f4e7672d151bc5a58670b98270029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x607 DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69A DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x76B DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x97F DUP4 DUP3 PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0F DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCA2 DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFE4 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1003 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MLOAD DUP3 LOG2 0xfc DUP6 0xef CODESIZE PUSH4 0xC5866C98 0xef LOG4 PUSH12 0x9407D06F1F4E7672D151BC5A PC PUSH8 0xB98270029000000 ",
							"sourceMap": "357:3745:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1844:187:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:85:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:85:0;;;;;;;;;;;;;;;;;;;;;;;760:449:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;760:449:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:407;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3690:407:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:109:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1226:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:388;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:388:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:261:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2955:261:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2358:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:187;1911:4;1956:6;1924:7;:19;1932:10;1924:19;;;;;;;;;;;;;;;:29;1944:8;1924:29;;;;;;;;;;;;;;;:38;;;;1990:8;1969:38;;1978:10;1969:38;;;2000:6;1969:38;;;;;;;;;;;;;;;;;;2021:4;2014:11;;1844:187;;;;:::o;383:85:0:-;427:7;450:12;;443:19;;383:85;:::o;760:449:4:-;842:4;878:1;863:17;;:3;:17;;;;855:26;;;;;;;;906:8;:15;915:5;906:15;;;;;;;;;;;;;;;;896:6;:25;;888:34;;;;;;;;947:7;:14;955:5;947:14;;;;;;;;;;;;;;;:26;962:10;947:26;;;;;;;;;;;;;;;;937:6;:36;;929:45;;;;;;;;1001:27;1021:6;1001:8;:15;1010:5;1001:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;983:8;:15;992:5;983:15;;;;;;;;;;;;;;;:45;;;;1051:25;1069:6;1051:8;:13;1060:3;1051:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1035:8;:13;1044:3;1035:13;;;;;;;;;;;;;;;:41;;;;1112:38;1143:6;1112:7;:14;1120:5;1112:14;;;;;;;;;;;;;;;:26;1127:10;1112:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1083:7;:14;1091:5;1083:14;;;;;;;;;;;;;;;:26;1098:10;1083:26;;;;;;;;;;;;;;;:67;;;;1173:3;1157:28;;1166:5;1157:28;;;1178:6;1157:28;;;;;;;;;;;;;;;;;;1199:4;1192:11;;760:449;;;;;:::o;3690:407::-;3773:4;3786:13;3802:7;:19;3810:10;3802:19;;;;;;;;;;;;;;;:29;3822:8;3802:29;;;;;;;;;;;;;;;;3786:45;;3861:8;3842:16;:27;3838:168;;;3912:1;3880:7;:19;3888:10;3880:19;;;;;;;;;;;;;;;:29;3900:8;3880:29;;;;;;;;;;;;;;;:33;;;;3838:168;;;3968:30;3981:16;3968:8;:12;;:30;;;;:::i;:::-;3936:7;:19;3944:10;3936:19;;;;;;;;;;;;;;;:29;3956:8;3936:29;;;;;;;;;;;;;;;:62;;;;3838:168;4033:8;4012:61;;4021:10;4012:61;;;4043:7;:19;4051:10;4043:19;;;;;;;;;;;;;;;:29;4063:8;4043:29;;;;;;;;;;;;;;;;4012:61;;;;;;;;;;;;;;;;;;4087:4;4080:11;;3690:407;;;;;:::o;1226:109:0:-;1282:15;1313:8;:16;1322:6;1313:16;;;;;;;;;;;;;;;;1306:23;;1226:109;;;:::o;629:388::-;692:4;728:1;713:17;;:3;:17;;;;705:26;;;;;;;;756:8;:20;765:10;756:20;;;;;;;;;;;;;;;;746:6;:30;;738:39;;;;;;;;873:32;898:6;873:8;:20;882:10;873:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;850:8;:20;859:10;850:20;;;;;;;;;;;;;;;:55;;;;928:25;946:6;928:8;:13;937:3;928:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;912:8;:13;921:3;912:13;;;;;;;;;;;;;;;:41;;;;981:3;960:33;;969:10;960:33;;;986:6;960:33;;;;;;;;;;;;;;;;;;1007:4;1000:11;;629:388;;;;:::o;2955:261:4:-;3033:4;3078:46;3112:11;3078:7;:19;3086:10;3078:19;;;;;;;;;;;;;;;:29;3098:8;3078:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3046:7;:19;3054:10;3046:19;;;;;;;;;;;;;;;:29;3066:8;3046:29;;;;;;;;;;;;;;;:78;;;;3152:8;3131:61;;3140:10;3131:61;;;3162:7;:19;3170:10;3162:19;;;;;;;;;;;;;;;:29;3182:8;3162:29;;;;;;;;;;;;;;;;3131:61;;;;;;;;;;;;;;;;;;3206:4;3199:11;;2955:261;;;;:::o;2358:128::-;2432:7;2455;:15;2463:6;2455:15;;;;;;;;;;;;;;;:25;2471:8;2455:25;;;;;;;;;;;;;;;;2448:32;;2358:128;;;;:::o;870:113:3:-;928:7;956:1;951;:6;;944:14;;;;;;976:1;972;:5;965:12;;870:113;;;;:::o;1050:133::-;1108:7;1124:9;1140:1;1136;:5;1124:17;;1160:1;1155;:6;;1148:14;;;;;;1176:1;1169:8;;1050:133;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "830600",
								"executionCost": "864",
								"totalCost": "831464"
							},
							"external": {
								"allowance(address,address)": "838",
								"approve(address,uint256)": "22331",
								"balanceOf(address)": "647",
								"decreaseApproval(address,uint256)": "infinite",
								"increaseApproval(address,uint256)": "infinite",
								"totalSupply()": "424",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "MSTORE"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "POP"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "DUP1"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "CODECOPY"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 357,
									"end": 4102,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205182a2fc85ef3863c5866c98efa46b9407d06f1f4e7672d151bc5a58670b98270029",
									".code": [
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "LT"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DIV"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "66188463"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "D73DD623"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "EQ"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 4102,
											"name": "REVERT"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "JUMPDEST"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SUB"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "AND"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP3"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP3"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "JUMP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "JUMPDEST"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP3"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ISZERO"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ISZERO"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ISZERO"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ISZERO"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SUB"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "RETURN"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "RETURN"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "AND"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP3"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "AND"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP3"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP3"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "JUMP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ISZERO"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ISZERO"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ISZERO"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ISZERO"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "RETURN"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "JUMPDEST"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SUB"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "AND"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP3"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP3"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "JUMP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "JUMPDEST"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "MLOAD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP3"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ISZERO"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "MSTORE"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "ADD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "MLOAD"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "DUP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SUB"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP1"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "RETURN"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SUB"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP3"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MLOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP3"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MSTORE"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "ADD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "MLOAD"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SUB"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "RETURN"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SUB"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ISZERO"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SUB"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "RETURN"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SUB"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP3"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP3"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP3"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ISZERO"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ISZERO"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ISZERO"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ISZERO"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "MLOAD"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "DUP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SUB"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "RETURN"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "JUMPDEST"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SUB"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "ADD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "AND"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "ADD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP3"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "AND"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "ADD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP3"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "JUMP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "JUMPDEST"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "MLOAD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP3"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "MSTORE"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "ADD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "MLOAD"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SUB"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "RETURN"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1942,
											"name": "CALLER"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "MSTORE"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "MSTORE"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1943,
											"name": "KECCAK256"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1952,
											"name": "DUP6"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "MSTORE"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "MSTORE"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1953,
											"name": "KECCAK256"
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "SSTORE"
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "POP"
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "DUP3"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "AND"
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "CALLER"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "AND"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP5"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "MLOAD"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "DUP3"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "DUP2"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "MSTORE"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "ADD"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "SWAP2"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "POP"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "POP"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "MLOAD"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "SWAP2"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "SUB"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "SWAP1"
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "LOG3"
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP3"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "SWAP2"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "POP"
										},
										{
											"begin": 1844,
											"end": 2031,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 427,
											"end": 434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 450,
											"end": 462,
											"name": "SLOAD"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 468,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "AND"
										},
										{
											"begin": 863,
											"end": 866,
											"name": "DUP4"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "AND"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "EQ"
										},
										{
											"begin": 863,
											"end": 880,
											"name": "ISZERO"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "ISZERO"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "ISZERO"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "REVERT"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 855,
											"end": 881,
											"name": "JUMPDEST"
										},
										{
											"begin": 906,
											"end": 914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "KECCAK256"
										},
										{
											"begin": 906,
											"end": 921,
											"name": "SLOAD"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3"
										},
										{
											"begin": 896,
											"end": 921,
											"name": "GT"
										},
										{
											"begin": 896,
											"end": 921,
											"name": "ISZERO"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "ISZERO"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "ISZERO"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "JUMPI"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "REVERT"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 888,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 955,
											"end": 960,
											"name": "DUP6"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "DUP2"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "MSTORE"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "ADD"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "SWAP1"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "DUP2"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "MSTORE"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "ADD"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 947,
											"end": 961,
											"name": "KECCAK256"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 962,
											"end": 972,
											"name": "CALLER"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "DUP2"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "MSTORE"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "ADD"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "SWAP1"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "DUP2"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "MSTORE"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "ADD"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "KECCAK256"
										},
										{
											"begin": 947,
											"end": 973,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 973,
											"name": "GT"
										},
										{
											"begin": 937,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "JUMPI"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "DUP1"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "REVERT"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 929,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1027,
											"name": "DUP3"
										},
										{
											"begin": 1001,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP8"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "AND"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "AND"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "DUP2"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "MSTORE"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "ADD"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "DUP2"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "MSTORE"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "ADD"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "KECCAK256"
										},
										{
											"begin": 1001,
											"end": 1016,
											"name": "SLOAD"
										},
										{
											"begin": 1001,
											"end": 1020,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1001,
											"end": 1020,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "SWAP2"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "AND"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1028,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP7"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 983,
											"end": 998,
											"name": "KECCAK256"
										},
										{
											"begin": 983,
											"end": 1028,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1028,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1028,
											"name": "SSTORE"
										},
										{
											"begin": 983,
											"end": 1028,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1051,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1063,
											"name": "DUP7"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "KECCAK256"
										},
										{
											"begin": 1051,
											"end": 1064,
											"name": "SLOAD"
										},
										{
											"begin": 1051,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1051,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "SWAP2"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1051,
											"end": 1076,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 1047,
											"name": "DUP6"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "MSTORE"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "MSTORE"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "KECCAK256"
										},
										{
											"begin": 1035,
											"end": 1076,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1076,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1076,
											"name": "SSTORE"
										},
										{
											"begin": 1035,
											"end": 1076,
											"name": "POP"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP8"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "AND"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "AND"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "KECCAK256"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "CALLER"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "AND"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "AND"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "KECCAK256"
										},
										{
											"begin": 1112,
											"end": 1138,
											"name": "SLOAD"
										},
										{
											"begin": 1112,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1112,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "AND"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1112,
											"end": 1150,
											"name": "JUMPDEST"
										},
										{
											"begin": 1083,
											"end": 1090,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP7"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "KECCAK256"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1108,
											"name": "CALLER"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "AND"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "AND"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "MSTORE"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "ADD"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "SWAP1"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "MSTORE"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "ADD"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1109,
											"name": "KECCAK256"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "SWAP1"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "SSTORE"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP5"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP5"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "MLOAD"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "DUP3"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "DUP2"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "MSTORE"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "ADD"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "SWAP2"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "MLOAD"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "SWAP2"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "SUB"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1157,
											"end": 1185,
											"name": "LOG3"
										},
										{
											"begin": 1199,
											"end": 1203,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1192,
											"end": 1203,
											"name": "SWAP1"
										},
										{
											"begin": 1192,
											"end": 1203,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP4"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "SWAP3"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 1209,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "JUMPDEST"
										},
										{
											"begin": 3773,
											"end": 3777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3799,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 3809,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "CALLER"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3821,
											"name": "KECCAK256"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3830,
											"name": "DUP6"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "KECCAK256"
										},
										{
											"begin": 3802,
											"end": 3831,
											"name": "SLOAD"
										},
										{
											"begin": 3786,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3786,
											"end": 3831,
											"name": "POP"
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "DUP1"
										},
										{
											"begin": 3842,
											"end": 3858,
											"name": "DUP4"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "GT"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "ISZERO"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "JUMPI"
										},
										{
											"begin": 3912,
											"end": 3913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3887,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "CALLER"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "AND"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "AND"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "MSTORE"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "MSTORE"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "KECCAK256"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3908,
											"name": "DUP7"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "AND"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "AND"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "MSTORE"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "MSTORE"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "ADD"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3909,
											"name": "KECCAK256"
										},
										{
											"begin": 3880,
											"end": 3913,
											"name": "DUP2"
										},
										{
											"begin": 3880,
											"end": 3913,
											"name": "SWAP1"
										},
										{
											"begin": 3880,
											"end": 3913,
											"name": "SSTORE"
										},
										{
											"begin": 3880,
											"end": 3913,
											"name": "POP"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "JUMP"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "JUMPDEST"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3981,
											"end": 3997,
											"name": "DUP4"
										},
										{
											"begin": 3968,
											"end": 3976,
											"name": "DUP3"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "SWAP1"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "SWAP2"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "SWAP1"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "AND"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "JUMPDEST"
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3954,
											"name": "CALLER"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "KECCAK256"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3964,
											"name": "DUP7"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "AND"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "AND"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "DUP2"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "MSTORE"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "ADD"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "SWAP1"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "DUP2"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "MSTORE"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "ADD"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3965,
											"name": "KECCAK256"
										},
										{
											"begin": 3936,
											"end": 3998,
											"name": "DUP2"
										},
										{
											"begin": 3936,
											"end": 3998,
											"name": "SWAP1"
										},
										{
											"begin": 3936,
											"end": 3998,
											"name": "SSTORE"
										},
										{
											"begin": 3936,
											"end": 3998,
											"name": "POP"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3838,
											"end": 4006,
											"name": "JUMPDEST"
										},
										{
											"begin": 4033,
											"end": 4041,
											"name": "DUP4"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "AND"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "CALLER"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "AND"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4043,
											"end": 4050,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4061,
											"name": "CALLER"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "KECCAK256"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4071,
											"name": "DUP9"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "AND"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "AND"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "DUP2"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "MSTORE"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "ADD"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "SWAP1"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "DUP2"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "MSTORE"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "ADD"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "KECCAK256"
										},
										{
											"begin": 4043,
											"end": 4072,
											"name": "SLOAD"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "MLOAD"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "DUP1"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "DUP3"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "DUP2"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "MSTORE"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "ADD"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "SWAP2"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "POP"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "POP"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "MLOAD"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "DUP1"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "SWAP2"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "SUB"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "SWAP1"
										},
										{
											"begin": 4012,
											"end": 4073,
											"name": "LOG3"
										},
										{
											"begin": 4087,
											"end": 4091,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4080,
											"end": 4091,
											"name": "SWAP2"
										},
										{
											"begin": 4080,
											"end": 4091,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP3"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "SWAP2"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "POP"
										},
										{
											"begin": 3690,
											"end": 4097,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP4"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "MSTORE"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "MSTORE"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "KECCAK256"
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SLOAD"
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP2"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 729,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 716,
											"name": "DUP4"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "EQ"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "JUMPI"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "REVERT"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 705,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 756,
											"end": 764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "CALLER"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "ADD"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "ADD"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "KECCAK256"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3"
										},
										{
											"begin": 746,
											"end": 776,
											"name": "GT"
										},
										{
											"begin": 746,
											"end": 776,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "REVERT"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 738,
											"end": 777,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 882,
											"end": 892,
											"name": "CALLER"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "KECCAK256"
										},
										{
											"begin": 873,
											"end": 893,
											"name": "SLOAD"
										},
										{
											"begin": 873,
											"end": 897,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 873,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "AND"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "JUMPDEST"
										},
										{
											"begin": 850,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP1"
										},
										{
											"begin": 859,
											"end": 869,
											"name": "CALLER"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 870,
											"name": "KECCAK256"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "SSTORE"
										},
										{
											"begin": 850,
											"end": 905,
											"name": "POP"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP3"
										},
										{
											"begin": 928,
											"end": 936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 940,
											"name": "DUP7"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "ADD"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "ADD"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "KECCAK256"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SLOAD"
										},
										{
											"begin": 928,
											"end": 945,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "SWAP2"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 928,
											"end": 953,
											"name": "JUMPDEST"
										},
										{
											"begin": 912,
											"end": 920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 921,
											"end": 924,
											"name": "DUP6"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "SWAP1"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "MSTORE"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "ADD"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 912,
											"end": 925,
											"name": "KECCAK256"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP2"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SSTORE"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "AND"
										},
										{
											"begin": 969,
											"end": 979,
											"name": "CALLER"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "AND"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP5"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MLOAD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP3"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MSTORE"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "ADD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "POP"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "POP"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "MLOAD"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "DUP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP2"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SUB"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 993,
											"name": "LOG3"
										},
										{
											"begin": 1007,
											"end": 1011,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP3"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "POP"
										},
										{
											"begin": 629,
											"end": 1017,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMPDEST"
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3112,
											"end": 3123,
											"name": "DUP3"
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "CALLER"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "AND"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "AND"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "KECCAK256"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3106,
											"name": "DUP7"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "AND"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "AND"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "KECCAK256"
										},
										{
											"begin": 3078,
											"end": 3107,
											"name": "SLOAD"
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "SWAP2"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "AND"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3078,
											"end": 3124,
											"name": "JUMPDEST"
										},
										{
											"begin": 3046,
											"end": 3053,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "CALLER"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "DUP2"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "MSTORE"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "ADD"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "DUP2"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "MSTORE"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "ADD"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3065,
											"name": "KECCAK256"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3074,
											"name": "DUP6"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3075,
											"name": "KECCAK256"
										},
										{
											"begin": 3046,
											"end": 3124,
											"name": "DUP2"
										},
										{
											"begin": 3046,
											"end": 3124,
											"name": "SWAP1"
										},
										{
											"begin": 3046,
											"end": 3124,
											"name": "SSTORE"
										},
										{
											"begin": 3046,
											"end": 3124,
											"name": "POP"
										},
										{
											"begin": 3152,
											"end": 3160,
											"name": "DUP3"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3150,
											"name": "CALLER"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "AND"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3162,
											"end": 3169,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3180,
											"name": "CALLER"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "AND"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "AND"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP2"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "SWAP1"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "DUP2"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3181,
											"name": "KECCAK256"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3190,
											"name": "DUP8"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "AND"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "AND"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "SWAP1"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "KECCAK256"
										},
										{
											"begin": 3162,
											"end": 3191,
											"name": "SLOAD"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "MLOAD"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "DUP1"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "DUP3"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "DUP2"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "MSTORE"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "ADD"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "SWAP2"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "POP"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "POP"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "MLOAD"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "DUP1"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "SWAP2"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "SUB"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "SWAP1"
										},
										{
											"begin": 3131,
											"end": 3192,
											"name": "LOG3"
										},
										{
											"begin": 3206,
											"end": 3210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3199,
											"end": 3210,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3210,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP3"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "SWAP2"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2469,
											"name": "DUP5"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2470,
											"name": "KECCAK256"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "DUP4"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "KECCAK256"
										},
										{
											"begin": 2455,
											"end": 2480,
											"name": "SLOAD"
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1"
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP3"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "SWAP2"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 956,
											"end": 957,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "GT"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "JUMPI"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "INVALID"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 944,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 976,
											"end": 977,
											"name": "DUP2"
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP4"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 977,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 977,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "SWAP3"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1133,
											"name": "DUP1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP3"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP5"
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "ADD"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "SWAP1"
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "DUP4"
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "LT"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "JUMPI"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "INVALID"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "JUMPDEST"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "DUP1"
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "SWAP2"
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "SWAP3"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1183,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"_owner\":\"address The address which owns the funds.\\r\",\"_spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r    * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"_spender\":\"The address which will spend the funds.\\r\",\"_value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"_owner\":\"The address to query the the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.\\r    * approve should be called when allowed[_spender] == 0. To decrement\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"_spender\":\"The address which will spend the funds.\\r\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\\r\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.\\r    * approve should be called when allowed[_spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\\r\",\"_spender\":\"The address which will spend the funds.\\r\"}},\"totalSupply()\":{\"details\":\"total number of tokens in existence\\r\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\\r\",\"params\":{\"_to\":\"The address to transfer to.\\r\",\"_value\":\"The amount to be transferred.\\r\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\\r\",\"params\":{\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}}},\"title\":\"Standard ERC20 token\\r \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"erc20/contracts/StandardToken.sol\":\"StandardToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc20/contracts/BasicToken.sol\":{\"keccak256\":\"0x4048384d4f92db32e4a767ff232bd80b585bcb6f8835ea5413de52438947c0f3\",\"urls\":[\"bzzr://38065e30a9b41828cc3004a736eed28da464784bd285a29f8f0bbbd877922d33\"]},\"erc20/contracts/ERC20.sol\":{\"keccak256\":\"0x8d2f6b1674937f66102c738437e001f3079f155b852603000a708b9c5c965e02\",\"urls\":[\"bzzr://35d1898468732a5302edfb15e72ca975722a9d30de5b149424aea79bb36368bd\"]},\"erc20/contracts/ERC20Basic.sol\":{\"keccak256\":\"0x1f3c5cfe3678d25646cb1f1ce20b414e52a7dcde8abe46873b5740d32e08d655\",\"urls\":[\"bzzr://45add859ca62e4833cdac29e7a71f894dc82bbfeebc65acf4b67766667d54539\"]},\"erc20/contracts/SafeMath.sol\":{\"keccak256\":\"0x8fdf7e0a3939484bb124e5c37bdf801d7723c23dd0e189e3b0298593470902e4\",\"urls\":[\"bzzr://179b645f42dbb8d1208fd8cd17fcce20fa72fb4b02bbfaaa65cc7a5d0180559f\"]},\"erc20/contracts/StandardToken.sol\":{\"keccak256\":\"0x1c00bd085a2d20c6e9e2291883ab37ec4249ec92dde8b94c3a8aa176e121230f\",\"urls\":[\"bzzr://33e55313e4c9b35b1157cc7b6746a316a72fbf1d7ece29abe161683f676d8b46\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "erc20/contracts/BasicToken.sol:38:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(msg.sender, _to, _value);\r\n    ^-------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 993,
					"file": "erc20/contracts/BasicToken.sol",
					"start": 960
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "erc20/contracts/StandardToken.sol:33:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Transfer(_from, _to, _value);\r\n    ^--------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1185,
					"file": "erc20/contracts/StandardToken.sol",
					"start": 1157
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "erc20/contracts/StandardToken.sol:49:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, _value);\r\n    ^------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2007,
					"file": "erc20/contracts/StandardToken.sol",
					"start": 1969
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "erc20/contracts/StandardToken.sol:75:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    ^-----------------------------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3192,
					"file": "erc20/contracts/StandardToken.sol",
					"start": 3131
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "erc20/contracts/StandardToken.sol:96:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    ^-----------------------------------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4073,
					"file": "erc20/contracts/StandardToken.sol",
					"start": 4012
				},
				"type": "Warning"
			}
		],
		"sources": {
			"erc20/contracts/BasicToken.sol": {
				"ast": {
					"absolutePath": "erc20/contracts/BasicToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							95
						]
					},
					"id": 96,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "erc20/contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 96,
							"sourceUnit": 171,
							"src": "30:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc20/contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 96,
							"sourceUnit": 269,
							"src": "58:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 170,
										"src": "205:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$170",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "205:10:0"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95,
								170
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "227:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "221:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 12,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 95,
									"src": "254:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 11,
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "262:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "254:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 10,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "273:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 95,
									"src": "297:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "436:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "450:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 18,
												"id": 20,
												"nodeType": "Return",
												"src": "443:19:0"
											}
										]
									},
									"documentation": "@dev total number of tokens in existence\r",
									"id": 22,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "427:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:9:0"
									},
									"scope": 95,
									"src": "383:85:0",
									"stateMutability": "view",
									"superFunction": 145,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "698:319:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 32,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "713:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "728:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "720:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "720:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "713:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															532,
															533
														],
														"referencedDeclaration": 532,
														"src": "705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "705:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "705:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "746:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 41,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "756:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 44,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 42,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "765:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "765:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "756:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															532,
															533
														],
														"referencedDeclaration": 532,
														"src": "738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "738:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "850:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "850:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 57,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 52,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "873:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 55,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 53,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "882:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "882:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "873:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 243,
															"src": "873:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "873:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "850:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "850:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "912:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 63,
														"indexExpression": {
															"argumentTypes": null,
															"id": 62,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "921:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "912:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 68,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 64,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "928:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 66,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "937:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "928:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 267,
															"src": "928:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "928:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "912:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 73,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "969:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "969:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 75,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "981:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 76,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 72,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "960:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "960:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1007:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 30,
												"id": 80,
												"nodeType": "Return",
												"src": "1000:11:0"
											}
										]
									},
									"documentation": "@dev transfer token for a specified address\r\n@param _to The address to transfer to.\r\n@param _value The amount to be transferred.\r",
									"id": 82,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "647:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "660:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "646:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "692:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:0"
									},
									"scope": 95,
									"src": "629:388:0",
									"stateMutability": "nonpayable",
									"superFunction": 161,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1299:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1313:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 91,
													"indexExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1313:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 92,
												"nodeType": "Return",
												"src": "1306:23:0"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\r\n@param _owner The address to query the the balance of.\r\n@return An uint256 representing the amount owned by the passed address.\r",
									"id": 94,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1245:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1244:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1282:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1281:17:0"
									},
									"scope": 95,
									"src": "1226:109:0",
									"stateMutability": "view",
									"superFunction": 152,
									"visibility": "public"
								}
							],
							"scope": 96,
							"src": "182:1158:0"
						}
					],
					"src": "0:1344:0"
				},
				"id": 0
			},
			"erc20/contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "erc20/contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							138
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 97,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "erc20/contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 98,
							"nodeType": "ImportDirective",
							"scope": 139,
							"sourceUnit": 171,
							"src": "28:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 99,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 170,
										"src": "171:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$170",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 100,
									"nodeType": "InheritanceSpecifier",
									"src": "171:10:1"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								170
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 109,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "206:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "221:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "205:32:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "259:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "258:9:1"
									},
									"scope": 138,
									"src": "187:81:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 120,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "293:41:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "351:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "350:6:1"
									},
									"scope": 138,
									"src": "272:85:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 129,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "378:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "395:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:32:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "426:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "426:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "425:6:1"
									},
									"scope": 138,
									"src": "361:71:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 137,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "451:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "499:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "450:63:1"
									},
									"src": "436:78:1"
								}
							],
							"scope": 139,
							"src": "153:364:1"
						}
					],
					"src": "0:521:1"
				},
				"id": 1
			},
			"erc20/contracts/ERC20Basic.sol": {
				"ast": {
					"absolutePath": "erc20/contracts/ERC20Basic.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							170
						]
					},
					"id": 171,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/179\r",
							"fullyImplemented": false,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 145,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "232:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "231:9:2"
									},
									"scope": 170,
									"src": "188:53:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 152,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "263:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "298:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "297:9:2"
									},
									"scope": 170,
									"src": "245:62:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 161,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "329:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "341:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:27:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "372:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "372:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "371:6:2"
									},
									"scope": 170,
									"src": "311:67:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 169,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "397:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "419:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "439:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:57:2"
									},
									"src": "382:72:2"
								}
							],
							"scope": 171,
							"src": "163:294:2"
						}
					],
					"src": "0:461:2"
				},
				"id": 2
			},
			"erc20/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "erc20/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							268
						]
					},
					"id": 269,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "282:113:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "293:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "298:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "293:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 187,
												"nodeType": "IfStatement",
												"src": "289:37:3",
												"trueBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "301:25:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "317:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 180,
															"id": 185,
															"nodeType": "Return",
															"src": "310:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "332:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "344:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 191,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "348:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "344:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "332:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 195,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "363:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "367:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "363:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "372:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "363:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 194,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "356:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "356:18:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 189,
													"src": "388:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 203,
												"nodeType": "Return",
												"src": "381:8:3"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.\r",
									"id": 205,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "228:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "239:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "227:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "273:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "272:9:3"
									},
									"scope": 268,
									"src": "215:180:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "549:203:3",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 223,
														"src": "631:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "631:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "643:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "647:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "643:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 220,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "745:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 221,
												"nodeType": "Return",
												"src": "738:8:3"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.\r",
									"id": 223,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "495:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "506:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "540:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "539:9:3"
									},
									"scope": 268,
									"src": "482:270:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "937:46:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "951:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 234,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "956:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "951:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "944:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "944:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 238,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "972:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "976:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "972:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 241,
												"nodeType": "Return",
												"src": "965:12:3"
											}
										]
									},
									"documentation": "@dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r",
									"id": 243,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "883:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "894:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "928:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "927:9:3"
									},
									"scope": 268,
									"src": "870:113:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1117:66:3",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "1124:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1124:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1136:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1140:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1136:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1124:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 259,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1155:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1160:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1155:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 258,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1148:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1148:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 253,
													"src": "1176:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 265,
												"nodeType": "Return",
												"src": "1169:8:3"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.\r",
									"id": 267,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1074:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1062:22:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1108:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1107:9:3"
									},
									"scope": 268,
									"src": "1050:133:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 269,
							"src": "124:1062:3"
						}
					],
					"src": "0:1190:3"
				},
				"id": 3
			},
			"erc20/contracts/StandardToken.sol": {
				"ast": {
					"absolutePath": "erc20/contracts/StandardToken.sol",
					"exportedSymbols": {
						"StandardToken": [
							514
						]
					},
					"id": 515,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"absolutePath": "erc20/contracts/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 271,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 96,
							"src": "28:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc20/contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 139,
							"src": "56:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 273,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "383:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$138",
											"typeString": "contract ERC20"
										}
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "383:5:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 275,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 95,
										"src": "390:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$95",
											"typeString": "contract BasicToken"
										}
									},
									"id": 276,
									"nodeType": "InheritanceSpecifier",
									"src": "390:10:4"
								}
							],
							"contractDependencies": [
								95,
								138,
								170
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								95,
								138,
								170
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 282,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "408:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 281,
										"keyType": {
											"id": 277,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "417:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "408:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 280,
											"keyType": {
												"id": 278,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "428:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 279,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "848:361:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "863:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "878:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "870:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "870:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "863:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															532,
															533
														],
														"referencedDeclaration": 532,
														"src": "855:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "855:26:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "896:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "906:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 305,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 304,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "915:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "906:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "896:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															532,
															533
														],
														"referencedDeclaration": 532,
														"src": "888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "888:34:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "937:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 311,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "947:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 313,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 312,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "955:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "947:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 316,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 314,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "962:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "962:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "947:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "937:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															532,
															533
														],
														"referencedDeclaration": 532,
														"src": "929:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "929:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "983:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"argumentTypes": null,
															"id": 321,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "992:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "983:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 327,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "1021:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "1001:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 325,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1010:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1001:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 243,
															"src": "1001:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1001:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "983:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "983:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 331,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1035:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 333,
														"indexExpression": {
															"argumentTypes": null,
															"id": 332,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1044:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1035:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 338,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "1069:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 334,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "1051:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 335,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1060:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1051:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 267,
															"src": "1051:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1051:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1035:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "1035:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "1083:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 346,
															"indexExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "1091:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1083:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 344,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "1098:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1098:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1083:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 355,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "1143:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "1112:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 350,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 349,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "1120:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1112:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 351,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "1127:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1127:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1112:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 243,
															"src": "1112:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1112:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1083:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1083:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 360,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 361,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1173:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 362,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1178:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1157:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1157:28:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1199:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 366,
												"nodeType": "Return",
												"src": "1192:11:4"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r",
									"id": 368,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "782:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "797:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "810:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:44:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 514,
									"src": "760:449:4",
									"stateMutability": "nonpayable",
									"superFunction": 120,
									"visibility": "public"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "1917:114:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 377,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "1924:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 381,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "1932:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1932:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1924:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "1944:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1924:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 383,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1956:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1924:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1924:38:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "1978:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1978:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 389,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "1990:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "2000:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1969:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1969:38:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2021:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 376,
												"id": 394,
												"nodeType": "Return",
												"src": "2014:11:4"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n@param _spender The address which will spend the funds.\r\n@param _value The amount of tokens to be spent.\r",
									"id": 396,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1861:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1879:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1860:34:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "1911:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1911:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:6:4"
									},
									"scope": 514,
									"src": "1844:187:4",
									"stateMutability": "nonpayable",
									"superFunction": 129,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2441:45:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 405,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2455:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 407,
														"indexExpression": {
															"argumentTypes": null,
															"id": 406,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2463:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2455:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 409,
													"indexExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2471:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2455:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "2448:32:4"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\r\n@param _owner address The address which owns the funds.\r\n@param _spender address The address which will spend the funds.\r\n@return A uint256 specifying the amount of tokens still available for the spender.\r",
									"id": 412,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2377:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2393:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2376:34:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2432:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2431:9:4"
									},
									"scope": 514,
									"src": "2358:128:4",
									"stateMutability": "view",
									"superFunction": 109,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "3039:177:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "3046:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 425,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 422,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "3054:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3054:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3046:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 426,
														"indexExpression": {
															"argumentTypes": null,
															"id": 424,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "3066:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3046:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 434,
																"name": "_addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3112:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 427,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3078:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 430,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 428,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "3086:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3086:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3078:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 432,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "_spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "3098:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3078:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 267,
															"src": "3078:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3078:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3046:78:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "3046:78:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "3140:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3140:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 441,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "3152:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 442,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "3162:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 443,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "3170:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3170:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3162:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 447,
															"indexExpression": {
																"argumentTypes": null,
																"id": 446,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "3182:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3162:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "3131:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "3131:61:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3206:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 420,
												"id": 451,
												"nodeType": "Return",
												"src": "3199:11:4"
											}
										]
									},
									"documentation": "@dev Increase the amount of tokens that an owner allowed to a spender.\r\n\n   * approve should be called when allowed[_spender] == 0. To increment\r\nallowed value is better to use this function to avoid 2 calls (and wait until\r\nthe first transaction is mined)\r\nFrom MonolithDAO Token.sol\r\n@param _spender The address which will spend the funds.\r\n@param _addedValue The amount of tokens to increase the allowance by.\r",
									"id": 453,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2981:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"name": "_addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2999:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2999:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2980:36:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "3033:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3033:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3032:6:4"
									},
									"scope": 514,
									"src": "2955:261:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "3779:318:4",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "3786:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 462,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3786:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 464,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 467,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "3810:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3810:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 469,
													"indexExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "3822:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3802:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3786:45:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 471,
														"name": "_subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "3842:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 472,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3861:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3842:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "3927:79:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 484,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3936:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 488,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 485,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3944:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3944:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3936:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 489,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 487,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3956:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3936:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 492,
																			"name": "_subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "3981:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 490,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "3968:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "3968:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3968:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3936:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "3936:62:4"
														}
													]
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "3838:168:4",
												"trueBody": {
													"id": 483,
													"nodeType": "Block",
													"src": "3871:50:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 474,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "3880:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 478,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 475,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3888:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3888:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3880:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 479,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 477,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3900:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3880:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3912:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3880:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 482,
															"nodeType": "ExpressionStatement",
															"src": "3880:33:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4021:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4021:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 501,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4033:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 502,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "4043:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 503,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "4051:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4051:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4043:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 507,
															"indexExpression": {
																"argumentTypes": null,
																"id": 506,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "4063:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4043:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4012:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4012:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "4012:61:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4087:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 511,
												"nodeType": "Return",
												"src": "4080:11:4"
											}
										]
									},
									"documentation": "@dev Decrease the amount of tokens that an owner allowed to a spender.\r\n\n   * approve should be called when allowed[_spender] == 0. To decrement\r\nallowed value is better to use this function to avoid 2 calls (and wait until\r\nthe first transaction is mined)\r\nFrom MonolithDAO Token.sol\r\n@param _spender The address which will spend the funds.\r\n@param _subtractedValue The amount of tokens to decrease the allowance by.\r",
									"id": 513,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3716:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"name": "_subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3734:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3734:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3715:41:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3773:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3773:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3772:6:4"
									},
									"scope": 514,
									"src": "3690:407:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 515,
							"src": "357:3745:4"
						}
					],
					"src": "0:4106:4"
				},
				"id": 4
			}
		}
	}
}